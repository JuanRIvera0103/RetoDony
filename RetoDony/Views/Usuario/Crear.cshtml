@model RetoDony.Models.Entities.Usuario
@{
    ViewBag.Title = "Empleado - Crear";
    List<SelectListItem> items = (List<SelectListItem>)ViewBag.items;
}
@if (ViewBag.error != null)
{
    <p>ViewBag.error;</p>
} 
<h2>Crear Empleado</h2>


@using (Html.BeginForm())
{
<div class="form-horizontal">
    <h4>Empleado:</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(x => x.Nombre, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(x => x.Nombre, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Telefono, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(x => x.Telefono, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Telefono, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Direccion, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(x => x.Direccion, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Direccion, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Email, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Edad, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(x => x.Edad, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Edad, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Tipodocumento, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(x => x.Tipodocumento, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Tipodocumento, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Documento, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(x => x.Documento, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Documento, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Cargo, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Cargo", items, "Seleccione el cargo", new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Cargo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-2">
            <input type="submit" value="Crear" class="btn btn-success" />
        </div>
    </div>
</div>
    <div class="btn btn-default">
        @Html.ActionLink("Volver", "MostrarUsuario")
    </div>
}

